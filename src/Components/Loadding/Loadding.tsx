import React, { useEffect, useState } from 'react';


const Loadding = (loadding: any) => {
    const [load, setLoad] = useState(0);

    // useEffect(() => {
    //     if (loadding) {
    //         const interval = setInterval(() => {
    //             setLoad(prevCount => prevCount >= 4 ? 1 : prevCount + 1);
    //           }, 500);
    //           // Clean up the interval on unmount
    //           return () => clearInterval(interval);
    //     }
    // },[loadding]);
    
    return (
        <svg width="60" height="60" viewBox="0 0 60 60" fill="none" xmlns="http://www.w3.org/2000/svg" >
            <g clip-path="url(#clip0_10819_1597)">
            
                <path d="M41.1077 15.2207L41.1051 15.2233L31.1101 25.2263C31.1097 25.2267 31.1094 25.227 31.109 25.2274C30.491 25.8392 29.5091 25.8392 28.8911 25.2274C28.8907 25.227 28.8904 25.2267 28.89 25.2263L18.895 15.2233L18.8932 15.2215C18.277 14.6087 18.2782 13.6235 18.8924 13.0144L18.895 13.0119L28.89 3.00883C28.8904 3.00844 28.8908 3.00805 28.8912 3.00766C29.5092 2.39606 30.4909 2.39606 31.1089 3.00768C31.1093 3.00806 31.1097 3.00845 31.1101 3.00883L41.1051 13.0119L41.1069 13.0136C41.7231 13.6265 41.7219 14.6116 41.1077 15.2207Z" stroke="#F59E0B" fill={`${load == 1 ? '#F59E0B' : 'transparent'}`} stroke-width="1.56863"></path>
                
                <path d="M59.2157 34.412C59.2157 40.3139 54.4313 45.0983 48.5294 45.0983C42.6275 45.0983 37.8431 40.3139 37.8431 34.412C37.8431 28.5101 42.6275 23.7257 48.5294 23.7257C54.4313 23.7257 59.2157 28.5101 59.2157 34.412Z" stroke="#007AFF" fill={`${load == 2 ? '#007AFF' : 'transparent'}`} stroke-width="1.56863"></path>

                <path d="M31.8085 42.2203L40.9237 53.0877V53.4249H41.2101C41.6073 53.881 41.853 54.4688 41.853 55.1329C41.853 56.5325 40.8187 57.6425 39.5377 57.7295H39.3756H20.6244H20.4635C19.19 57.6425 18.1471 56.5314 18.1471 55.1329C18.1471 54.632 18.3937 54.2128 18.7457 53.7026L18.7523 53.693L18.7599 53.6831C18.7759 53.6621 18.8009 53.6301 18.8353 53.5866C18.9036 53.5001 19.004 53.3745 19.1323 53.2146C19.3888 52.8952 19.7542 52.4425 20.1926 51.9008C21.0693 50.8177 22.2361 49.3804 23.4024 47.9453C24.5687 46.5103 25.7342 45.0776 26.6082 44.0037L27.6641 42.7065L27.9599 42.3432L28.0378 42.2475L28.0578 42.223L28.0629 42.2168L28.0641 42.2152L28.0645 42.2148C28.0645 42.2147 28.0646 42.2147 27.6769 41.8989L28.0646 42.2147L28.0745 42.2025L28.0837 42.1896C28.5635 41.5181 29.1929 41.0879 29.9408 41.0879C30.6856 41.0879 31.3027 41.5174 31.7853 42.1903L31.7963 42.2057L31.8085 42.2203ZM18.7466 53.7006L18.7467 53.7005L18.7466 53.7006Z" stroke="#EF4444" fill={`${load == 3 ? '#EF4444' : 'transparent'}`} stroke-width="1.56863"></path>

                <path d="M22.1569 34.412C22.1569 40.3139 17.3725 45.0983 11.4706 45.0983C5.56872 45.0983 0.784314 40.3139 0.784314 34.412C0.784314 28.5101 5.56872 23.7257 11.4706 23.7257C17.3725 23.7257 22.1569 28.5101 22.1569 34.412Z" stroke="#22C55E" fill={`${load == 4 ? '#22C55E' : 'transparent'}`} stroke-width="1.56863"></path>

                

            </g><defs><clipPath id="clip0_10819_1597"><rect width="60" height="60" fill="white"></rect></clipPath></defs>
        </svg>
    );
};

export default Loadding;